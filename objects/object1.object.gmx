<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_ball_2</spriteName>
  <solid>-1</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>grav = 0.2;
hsp = 0;
hsp_carry = 0;
vsp = 0;
movespeed = 4;
jumps = 0;
jumpsmax = 0;
jumpspeed_normal = 7;
jumpspeed_powerup = 12;
jumpspeed = jumpspeed_normal ; 
vspeed = 1;
counter = 0
global.skor = 0 ;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Controller

//Get the player's input

key_right = keyboard_check(vk_right);
key_left = -keyboard_check(vk_left) ;
key_jump = keyboard_check_pressed(vk_space);
key_jump_held = keyboard_check(vk_space);


//React to inputs
move = key_left + key_right;
hsp = move * movespeed;

if (vsp &lt; 10) vsp += grav;

//Jumps

if (y &lt; 180 )     // yukarı zıplamaması için
    jumpsmax = 0;
else
    jumpsmax = 3;

if (place_meeting(x,y+1,object2))
{
    jumps = jumpsmax;
}
else
{
    if (jumps == jumpsmax) jumps -=1;
}

if (key_jump) &amp;&amp; (jumps &gt; 0)
{
    jumps -= 1;
    vsp = -jumpspeed;
}

if (vsp &lt; 0) &amp;&amp; (!key_jump_held) vsp = max(vsp,-jumpspeed/2)

var hsp_final = hsp + hsp_carry;
hsp_carry = 0;


//Horizontal Collision
if (place_meeting(x+hsp_final,y,object2))
{
    while(!place_meeting(x+sign(hsp_final),y,object2))
    {
        x += sign(hsp_final);
    }
    hsp_final = 0;
    hsp = 0;
}
x += hsp_final;


//Vertical Collision
if (place_meeting(x,y+vsp,object2))
{
    while(!place_meeting(x,y+sign(vsp),object2))
    {
        y += sign(vsp);
        
    }
    vsp = 0;
}
y += vsp;

//Sprite Speed

if keyboard_check(vk_right) 
{
    image_speed = 1;
    if ( move !=0 ) image_xscale = move;
}
else 
    image_speed = 0;
    
if keyboard_check(vk_left) 
{
    image_speed = 1;
    if ( move !=0 ) image_xscale = move;
}
  

    
if (y &gt; room_height) room_goto(end_menu);


if ( key_jump or key_jump_held )and vsp&lt;0
{
    global.skor++;    
}

// Seviye 
if (global.skor == 500) {
    vspeed += 1;
}

if (global.skor == 1000) {
    vspeed += 1;
}

if (global.skor == 2000) {
    vspeed += 1; 
}

if (global.skor == 3000) {
    vspeed += 1; 
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Pointer

if (x&gt;720 or x&lt;0) and counter = 0
{
    if x&gt;720
    {
    instance_create(718,y,ob_point)
    counter = 1;
    }
    if x&lt;0
    {
    instance_create(2,y,ob_point_ters)
    counter = 1;
    }
}
else
{
instance_deactivate_object(ob_point)
instance_deactivate_object(ob_point_ters)
counter = 0
}

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Highscore


if (y &gt; 1280)
{
    ini_open("score.ini");
    ini_write_real("score","highscore",global.hscore);
    ini_close();
}

if (global.skor &gt; global.hscore)
{
    global.hscore = global.skor;
}

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Characters

if (global.characters == 0)     // siyah - beyaz
{
    sprite_index = spr_ball_2;
}

else if (global.characters == 1) // bordo - mavi
{
    sprite_index = spr_ball_5;
}

else if (global.characters == 2) // sarı - lacivert
{
    sprite_index = spr_ball_8;
}

else if (global.characters == 3) // sarı - kırmızı
{
    sprite_index = spr_ball_11;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
